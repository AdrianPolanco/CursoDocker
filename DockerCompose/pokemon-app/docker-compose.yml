#Version de docker que se va a usar
version: "3"

services:
    #Nombre del servicio
    db:
        #Usando variables de entorno en docker-compose.yml con ${Variable} SIN NINGUN TIPO DE ESPACIO
        container_name: ${MONGO_DB_NAME}
        #IMPORTANTE: Se recomienda SIEMPRE especificar el tag o version de la imagen, para que todos puedan saber con que version se trabaja y no crear problemas de incompatibilidad de versiones usando la version latest, la cual irá variando con el tiempo
        image: mongo:6.0
        volumes:
            - poke-vol:/data/db
        #ports:
        #    - ${MONGO_HOST_PORT}:27017
        #Sirve para configurar que el contenedor se reinicie en caso de algún problema
        restart: always
        #Configurando variables de entorno del contenedor de MongoDB
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
        command: ["--auth"]
    mongo-express:
        depends_on:
            - db
        image: mongo-express:1.0.0-alpha.4
        environment:
            - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
            - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
            - ME_CONFIG_MONGODB_SERVER=${MONGO_DB_NAME}
        ports:
            - ${MONGOEXPRESS_HOST_PORT}:8081
        restart: always
    poke-app:
        depends_on:
            - db
            - mongo-express
        image: klerith/pokemon-nest-app:1.0.0
        ports:
            - 3000:3000
        environment:
            - MONGODB=${MONGO_CONNECTION_STRING}
            - DBNAME=${MONGO_DB_NAME}
        restart: always

volumes:
    poke-vol:
        #Como aun no esta creado ese named volume se marca como external:false, por tanto se supone que se creara al ejecutar el compose
        external: false
